score -> c[1,2,3]
score -> c(1,2,3)
score <- c(1,2,3)
mean(score)
sd(score)
score <- c(1,2,3,5,9,50)
sd(score)
score <- c(10.5,4,9.3,17,15.3,16,18.3,14.8,16.8,21.3,12,9.8,9.3,22,4.5,13,5.5,14.8,9.5,6.3,5,13.8,23,15,12.8,14.8,21.3,13.8,19.3,14,20,10.8,9.3,14.5,11.8,8.3)
mean(score)
sd(score)
13.26+5.10
13.26-5.10
2**599999999999999999123
2**59999999999
2**599999
2**59
2^59
2**599999999999999999
(0.0050*2.58)/0.0049
qnorm(.0050)
0.0050*2.57
0.01285/0.0051
1-0.0050
0.995
qnorm(.995)
2.575*0.579
12.91-1.4909
12.91+1.4909
1-0.90
0.1/2
1-0.05
qnorm(.95)
4.1/sqrt(255)
1.645*0.256
11-0.42112
11.6+0.42112
11.6-0.42112
4.1/sqrt(225)
1.645*0.273
0.4490+11.6
0.4490-11.6
11.6-0.4490
1.645*(4.1/sqrt(225))
11.6-0.4496
(4.1/sqrt(225))
540+605+460+700+880+590+1250+750+640+1520+470+825
9230*12
9230/12
1-0.95
0.05/2
1-0.025
1-0.90
0.1/2
10+9+10+11+16+15+8+6+18+17+4+12+15+14+15+9+7+8+16+14
234/20
while(TRUE){
print("Hello")
}
counter <- 1
counter <- 1
while(counter < 12){
print(counter)
counter <- counter + 1
}
vactor <- c(1,2,3,4)
print(vactor)
rm(vector)
rm(vactor)
rm(counter)
vactor <- c(1,2,3,4)
print(vactor)
vector <- c(1,2,3,4)
rm(vactor)
vector <- c(1,2,6,4)
vector <- c("indyeiei", "hello")
print(vactor)
print(vector)
rm(vector)
vector <- c("indyeiei", "hello")
print(vector)
print("indyeiei")
for (i in 1:10){
print("indyeiei")
}
x <- 10
while (x != 0){
print("lower")
x <- x + 1
}
x <- 10
while (x != 0){
print("lower")
x <- x - 1
}
rm(*)
print("hello")
install.packages("ggplot2")
?qplot
?ggplot
?dimonds
library(ggplot2)
?qplot
install.packages("tibble")
version
updateR()
version
version
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(data=diamonds, carat, price, color=clarity, facets=.~clarity)
install.packages(c("colorspace", "ggplot2", "R6", "rlang", "stringi", "stringr", "tibble"))
place = c('Mumbai', 'Thane', 'Kalyan', 'Navi Mumbai', 'Nagpur', 'Nashik', 'Aurangabad', 'Pune', 'Kolhapur')
noise_lv = c(88.1, 73.7, 78.3, 76.4, 82.3, 79.1, 84, 83, 77.7)
Nox = c(146, 26, 43, 96, 88, 24, 31, 45, 25)
RSPM = c(299, 141, 153, 188, 638, 149, 408, 160, 139)
df = data.frame(place, noise_lv, Nox, RSPM)
df$Nox <- change(3, df$Nox)
place = c('Mumbai', 'Thane', 'Kalyan', 'Navi Mumbai', 'Nagpur', 'Nashik', 'Aurangabad', 'Pune', 'Kolhapur')
noise_lv = c(88.1, 73.7, 78.3, 76.4, 82.3, 79.1, 84, 83, 77.7)
Nox = c(146, 26, 43, 96, 88, 24, 31, 45, 25)
RSPM = c(299, 141, 153, 188, 638, 149, 408, 160, 139)
df = data.frame(place, noise_lv, Nox, RSPM)
change = function(sep, data){
min <- min(data)
max <- max(data)
range <- (max-min)/sep
level1 <- min+range
level2 <- level1+range
level3 <- level2+range
for(i in 1:length(data)){
if(data[i] >= min & data[i] <= level1){
data[i] <- "low"
}
else if(data[i] > level1 & data[i] <= level2){
data[i] <- "medium"
}
else if(data[i] >= level2 & data[i] <= level3){
data[i] <- "hight"
}
}
return(data)
}
df$Nox <- change(3, df$Nox)
change = function(sep, data){
min <- min(data)
max <- max(data)
range <- (max-min)/sep
level1 <- min+range
level2 <- level1+range
level3 <- level2+range
for(i in 1:length(data)){
if(data[i] >= min & data[i] <= level1){
data[i] <- "low"
}
else if(data[i] > level1 & data[i] <= level2){
data[i] <- "medium"
}
else if(data[i] >= level2 & data[i] <= level3){
data[i] <- "hight"
}
}
return(data)
}
df$Nox <- change(3, df$Nox)
change = function(sep, data){
min <- min(data)
max <- max(data)
range <- (max-min)/sep
level1 <- min+range
level2 <- level1+range
level3 <- level2+range
for(i in 1:length(data)){
if(data[i] >= min & data[i] <= level1){
data[i] <- "low"
}
else if(data[i] > level1 & data[i] <= level2){
data[i] <- "medium"
}
else if(data[i] >= level2 & data[i] <= level3){
data[i] <- "hight"
}
}
return(data)
}
change = function(sep, data){
min <- min(data)
max <- max(data)
range <- (max-min)/sep
level1 <- min+range
level2 <- level1+range
level3 <- level2+range
for(i in 1:length(data)){
if(data[i] >= min & data[i] <= level1){
data[i] <- "low"
}
else if(data[i] > level1 & data[i] <= level2){
data[i] <- "medium"
}
else if(data[i] >= level2 & data[i] <= level3){
data[i] <- "hight"
}
}
return(data)
}
place = c('Mumbai', 'Thane', 'Kalyan', 'Navi Mumbai', 'Nagpur', 'Nashik', 'Aurangabad', 'Pune', 'Kolhapur')
noise_lv = c(88.1, 73.7, 78.3, 76.4, 82.3, 79.1, 84, 83, 77.7)
Nox = c(146, 26, 43, 96, 88, 24, 31, 45, 25)
RSPM = c(299, 141, 153, 188, 638, 149, 408, 160, 139)
df = data.frame(place, noise_lv, Nox, RSPM)
change = function(data){
min <- min(data)
max <- max(data)
range <- (max-min)/3
level1 <- min+range
level2 <- level1+range
level3 <- level2+range
for(i in 1:length(data)){
if(data[i] >= min & data[i] <= level1){
data[i] <- "low"
}
else if(data[i] > level1 & data[i] <= level2){
data[i] <- "medium"
}
else if(data[i] >= level2 & data[i] <= level3){
data[i] <- "hight"
}
}
return(data)
}
df$Nox <- change(df$Nox)
return(data)
print(data)
change = function(data){
min <- min(data)
max <- max(data)
range <- (max-min)/3
level1 <- min+range
level2 <- level1+range
level3 <- level2+range
for(i in 1:length(data)){
if(data[i] >= min & data[i] <= level1){
data[i] <- "low"
}
else if(data[i] > level1 & data[i] <= level2){
data[i] <- "medium"
}
else if(data[i] >= level2 & data[i] <= level3){
data[i] <- "hight"
}
}
print(data)
}
df$Nox <- change(df$Nox)
place = c('Mumbai', 'Thane', 'Kalyan', 'Navi Mumbai', 'Nagpur', 'Nashik', 'Aurangabad', 'Pune', 'Kolhapur')
noise_lv = c(88.1, 73.7, 78.3, 76.4, 82.3, 79.1, 84, 83, 77.7)
Nox = c(146, 26, 43, 96, 88, 24, 31, 45, 25)
RSPM = c(299, 141, 153, 188, 638, 149, 408, 160, 139)
df = data.frame(place, noise_lv, Nox, RSPM)
change = function(data){
min <- min(data)
max <- max(data)
range <- (max-min)/3
level1 <- min+range
level2 <- level1+range
level3 <- level2+range
change = function(data){
min <- min(data)
max <- max(data)
range <- (max-min)/3
level1 <- min+range
level2 <- level1+range
level3 <- level2+range
for(i in 1:length(data)){
if(data[i] >= min & data[i] <= level1){
data[i] <- "low"
}
else if(data[i] > level1 & data[i] <= level2){
data[i] <- "medium"
}
else if(data[i] >= level2 & data[i] <= level3){
data[i] <- "hight"
}
}
print(data)
}
df$Nox <- change(df$Nox)
df$Nox <- change(df$Nox)
df = read.csv(d:\FDFS_Project\GDP_per_capita.xlsx)
twd
wd
setwd(D:/FDS_Project)
setwd("D:/FDS_Project")
